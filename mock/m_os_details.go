// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/ez/os_details.go
//
// Generated by this command:
//
//	mockgen -typed --source pkg/ez/os_details.go --destination mocks/m_os_details.go
//

// Package mock_ez is a generated GoMock package.
package mock_ez

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockOsDetails is a mock of OsDetails interface.
type MockOsDetails struct {
	ctrl     *gomock.Controller
	recorder *MockOsDetailsMockRecorder
	isgomock struct{}
}

// MockOsDetailsMockRecorder is the mock recorder for MockOsDetails.
type MockOsDetailsMockRecorder struct {
	mock *MockOsDetails
}

// NewMockOsDetails creates a new mock instance.
func NewMockOsDetails(ctrl *gomock.Controller) *MockOsDetails {
	mock := &MockOsDetails{ctrl: ctrl}
	mock.recorder = &MockOsDetailsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOsDetails) EXPECT() *MockOsDetailsMockRecorder {
	return m.recorder
}

// GetUserConfigDir mocks base method.
func (m *MockOsDetails) GetUserConfigDir() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserConfigDir")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserConfigDir indicates an expected call of GetUserConfigDir.
func (mr *MockOsDetailsMockRecorder) GetUserConfigDir() *MockOsDetailsGetUserConfigDirCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserConfigDir", reflect.TypeOf((*MockOsDetails)(nil).GetUserConfigDir))
	return &MockOsDetailsGetUserConfigDirCall{Call: call}
}

// MockOsDetailsGetUserConfigDirCall wrap *gomock.Call
type MockOsDetailsGetUserConfigDirCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockOsDetailsGetUserConfigDirCall) Return(arg0 string, arg1 error) *MockOsDetailsGetUserConfigDirCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockOsDetailsGetUserConfigDirCall) Do(f func() (string, error)) *MockOsDetailsGetUserConfigDirCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockOsDetailsGetUserConfigDirCall) DoAndReturn(f func() (string, error)) *MockOsDetailsGetUserConfigDirCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// GetUserHomeDir mocks base method.
func (m *MockOsDetails) GetUserHomeDir() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserHomeDir")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserHomeDir indicates an expected call of GetUserHomeDir.
func (mr *MockOsDetailsMockRecorder) GetUserHomeDir() *MockOsDetailsGetUserHomeDirCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserHomeDir", reflect.TypeOf((*MockOsDetails)(nil).GetUserHomeDir))
	return &MockOsDetailsGetUserHomeDirCall{Call: call}
}

// MockOsDetailsGetUserHomeDirCall wrap *gomock.Call
type MockOsDetailsGetUserHomeDirCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockOsDetailsGetUserHomeDirCall) Return(arg0 string, arg1 error) *MockOsDetailsGetUserHomeDirCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockOsDetailsGetUserHomeDirCall) Do(f func() (string, error)) *MockOsDetailsGetUserHomeDirCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockOsDetailsGetUserHomeDirCall) DoAndReturn(f func() (string, error)) *MockOsDetailsGetUserHomeDirCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
